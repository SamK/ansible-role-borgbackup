---

- name: Simplify variables 1/2
  set_fact:
    _repository_server: "{{ borgbackup_config.repository_server }}"
    _server_config: "{{ hostvars[borgbackup_config.repository_server] }}"

- name: Simplify variables 2/2
  set_fact:
    _repository_servers: "{{ ansible_play_hosts|map('extract', hostvars, ['borgbackup_config', 'repository_server'])|select('defined')|unique|list }}"
    _user: "{{ _server_config.borgbackup_user|default('backup') }}"
    _repo_path: "{{ _server_config.borgbackup_repository_storage.rstrip('/') }}/{{ inventory_hostname }}"
    _borg_executable: "{{ _server_config.borgbackup_path|default('/usr/' + ('' if _server_config.borgbackup_install_method|default('system') == 'system' else 'local/') + 'bin/borg') }}"  # noqa 204
    _repo_url: "ssh://{{ _server_config.borgbackup_user|default('backup') }}@{{ _server_config.ansible_facts.fqdn }}/./"

- name: Get public key
  slurp:
    src: "{{ borgbackup_home }}/.ssh/id_rsa.pub"
  register: slurped_key_b64

- name: Regather facts to get SSH host keys
  setup:
    gather_subset: "!all"
  delegate_to: "{{ item }}"
  delegate_facts: yes
  # Nice trick to only run once per repository_server (one might call it a slight hack)
  run_once: yes
  loop: "{{ _repository_servers }}"

- name: Create borg repository folder
  file:
    path: "{{ _repo_path }}"
    state: directory
    owner: "{{ _user }}"
    group: "{{ _user }}"
    mode: 0700
  delegate_to: "{{ _repository_server }}"

- name: Configure SSH to allow the clients to access
  authorized_key:
    user: "{{ _user }}"
    state: present
    key: "{{ slurped_key_b64.content|b64decode }}"
    key_options: 'command="cd {{ _repo_path }}; {{ _borg_executable }} serve --append-only --restrict-to-repository {{ _repo_path }}",restrict'
  delegate_to: "{{ _repository_server }}"
